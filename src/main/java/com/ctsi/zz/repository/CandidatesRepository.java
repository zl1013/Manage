package com.ctsi.zz.repository;

import com.ctsi.zz.domain.Candidates;
import com.ctsi.zz.domain.CandidatesExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface CandidatesRepository extends com.ctsi.ssdc.repository.BaseRepository<Candidates, String, CandidatesExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @SelectProvider(type=CandidatesSqlProvider.class, method="countByExample")
    long countByExample(CandidatesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @DeleteProvider(type=CandidatesSqlProvider.class, method="deleteByExample")
    int deleteByExample(CandidatesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @Delete({
        "delete from candidates",
        "where phone = #{phone,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String phone);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @Insert({
        "insert into candidates (phone, id, ",
        "name, email, type, ",
        "position, years, ",
        "age, education, ",
        "politic, universities, ",
        "major, status, entryTime, ",
        "salary, url)",
        "values (#{phone,jdbcType=VARCHAR}, #{id,jdbcType=VARCHAR}, ",
        "#{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, ",
        "#{position,jdbcType=VARCHAR}, #{years,jdbcType=VARCHAR}, ",
        "#{age,jdbcType=INTEGER}, #{education,jdbcType=VARCHAR}, ",
        "#{politic,jdbcType=VARCHAR}, #{universities,jdbcType=VARCHAR}, ",
        "#{major,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{entrytime,jdbcType=TIMESTAMP}, ",
        "#{salary,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR})"
    })
    int insert(Candidates record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @InsertProvider(type=CandidatesSqlProvider.class, method="insertSelective")
    int insertSelective(Candidates record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @SelectProvider(type=CandidatesSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="position", property="position", jdbcType=JdbcType.VARCHAR),
        @Result(column="years", property="years", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="education", property="education", jdbcType=JdbcType.VARCHAR),
        @Result(column="politic", property="politic", jdbcType=JdbcType.VARCHAR),
        @Result(column="universities", property="universities", jdbcType=JdbcType.VARCHAR),
        @Result(column="major", property="major", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="entryTime", property="entrytime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="salary", property="salary", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR)
    })
    List<Candidates> selectByExample(CandidatesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @Select({
        "select",
        "phone, id, name, email, type, position, years, age, education, politic, universities, ",
        "major, status, entryTime, salary, url",
        "from candidates",
        "where phone = #{phone,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="position", property="position", jdbcType=JdbcType.VARCHAR),
        @Result(column="years", property="years", jdbcType=JdbcType.VARCHAR),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="education", property="education", jdbcType=JdbcType.VARCHAR),
        @Result(column="politic", property="politic", jdbcType=JdbcType.VARCHAR),
        @Result(column="universities", property="universities", jdbcType=JdbcType.VARCHAR),
        @Result(column="major", property="major", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="entryTime", property="entrytime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="salary", property="salary", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR)
    })
    Candidates selectByPrimaryKey(String phone);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @UpdateProvider(type=CandidatesSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Candidates record, @Param("example") CandidatesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @UpdateProvider(type=CandidatesSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Candidates record, @Param("example") CandidatesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @UpdateProvider(type=CandidatesSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Candidates record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table candidates
     *
     * @mbg.generated Fri Nov 27 14:46:33 CST 2020
     */
    @Update({
        "update candidates",
        "set id = #{id,jdbcType=VARCHAR},",
          "name = #{name,jdbcType=VARCHAR},",
          "email = #{email,jdbcType=VARCHAR},",
          "type = #{type,jdbcType=VARCHAR},",
          "position = #{position,jdbcType=VARCHAR},",
          "years = #{years,jdbcType=VARCHAR},",
          "age = #{age,jdbcType=INTEGER},",
          "education = #{education,jdbcType=VARCHAR},",
          "politic = #{politic,jdbcType=VARCHAR},",
          "universities = #{universities,jdbcType=VARCHAR},",
          "major = #{major,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "entryTime = #{entrytime,jdbcType=TIMESTAMP},",
          "salary = #{salary,jdbcType=VARCHAR},",
          "url = #{url,jdbcType=VARCHAR}",
        "where phone = #{phone,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Candidates record);


//    @Select({
//            "select",
//            "phone, id, name, email, type, position, years, age, education, politic, universities, ",
//            "major, status, entryTime, salary, url",
//            "from candidates",
//            "where name = #{name,jdbcType=VARCHAR}"
//    })
//    @Results({
//            @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR, id=true),
//            @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR),
//            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
//            @Result(column="email", property="email", jdbcType=JdbcType.VARCHAR),
//            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
//            @Result(column="position", property="position", jdbcType=JdbcType.VARCHAR),
//            @Result(column="years", property="years", jdbcType=JdbcType.VARCHAR),
//            @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
//            @Result(column="education", property="education", jdbcType=JdbcType.VARCHAR),
//            @Result(column="politic", property="politic", jdbcType=JdbcType.VARCHAR),
//            @Result(column="universities", property="universities", jdbcType=JdbcType.VARCHAR),
//            @Result(column="major", property="major", jdbcType=JdbcType.VARCHAR),
//            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
//            @Result(column="entryTime", property="entrytime", jdbcType=JdbcType.TIMESTAMP),
//            @Result(column="salary", property="salary", jdbcType=JdbcType.VARCHAR),
//            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR)
//    })
//    Candidates selectByName(String name);
}